#!/usr/bin/env ipython --
# -*- coding: utf-8 -*-
from __future__ import print_function, division, absolute_import, unicode_literals
import sys, os, argparse, glob
from os import path


if __name__ == '__main__':
    import script_utils # Append mripy to Python path
    from mripy import afni, evaluation
    timer = script_utils.ScriptTimer()

    parser = argparse.ArgumentParser(desciption='Align SurfVol to experiment anat.')
    parser.add_argument('-b', '-base', '-e', '--exp_anat', required=True, help='experiment anat (base image)')
    parser.add_argument('-s', '-suma', '--suma', default='../SUMA', help='SUMA directory')
    parser.add_argument('-i', '-input', '-v', '--surf_vol', default=None, help='SurfVol (source image), default copy from SUMA')
    parser.add_argument('-o', '-output', '-p', '-prefix', '--prefix', default=None, help='output prefix (default SurfVol_Alnd_Exp)')
    parser.add_argument('-r', '--refit_base', action='store_true', help='store S2E transform also in base image')
    args = parser.parse_args()
    suma_path = path.expanduser(args.suma)
    suma_subj = afni.get_suma_subj(suma_path)
    if args.surf_vol is None:
        args.surf_vol = path.join(suma_path, '%s_SurfVol+orig' % suma_subj)

    !align_anat.ipy -b $args.exp_anat -i $args.surf_vol -o $args.prefix --suffix_1D .A2E.1D
    if not path.exists(args.prefix + '+orig.HEAD'): # Check whether align_anat is successful
        sys.exit(1)

    # Copy surface-experiment-mapping matrices to exp_anat, so that
    # you can also use exp_anat as SurfVol
    if args.refit_base:
        !3drefit -atrcopy $args.prefix+orig ALLINEATE_MATVEC_S2B_000000 $exp_anat
        !3drefit -atrcopy $args.prefix+orig ALLINEATE_MATVEC_B2S_000000 $exp_anat

    # Generate viewing script, using relative path in it
    viewing_script = 'run_suma'
    !echo "afni -niml &" > $viewing_script
    !echo "suma -spec $suma_path/{suma_subj}_both.spec -sv $args.prefix+orig &" >> $viewing_script

    # Remove temp files
    !rm tmp.*
