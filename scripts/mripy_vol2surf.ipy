#!/usr/bin/env ipython_wrapper
# -*- coding: utf-8 -*-
from __future__ import print_function, division, absolute_import, unicode_literals
import argparse, re, os
from os import path


if __name__ == '__main__':
    import script_utils # Append mripy to Python path
    from mripy import afni, utils
    timer = script_utils.ScriptTimer()

    parser = argparse.ArgumentParser(description='')
    parser.add_argument('-i', '--input', required=True, help='')
    parser.add_argument('-m', '--mask', help='')
    parser.add_argument('-s', '--suma', default='../SUMA', help='SUMA directory (default ../SUMA)')
    parser.add_argument('--spec', help='')
    parser.add_argument('-v', '--surf_vol', default='SurfVol_Alnd_Exp+orig', help='SurfVol (default SurfVol_Alnd_Exp+orig)')
    parser.add_argument('-o', '--prefix', help='output prefix (default as 1st ROI)')
    parser.add_argument('-f', '--map_func', default='median', help='')
    args = parser.parse_args()
    spec = afni.get_suma_info(args.suma, args.spec)['spec']
    prefix = afni.get_prefix(args.prefix)
    hemis = ['lh', 'rh']
    
    pc = utils.ParallelCaller() # Execute 2 instances of 3dVol2Surf in parallel
    mask_cmd = ['-cmask', args.mask] if args.mask is not None else []
    out_1D = args.prefix.endswith('.1D') or args.prefix.endswith('.1D.dset')
    for hemi in hemis:
        fo_niml = '{0}.{1}.niml.dset'.format(prefix, hemi)
        if path.exists(fo_niml):
            os.remove(fo_niml)
        fo_1D = '{0}.{1}.1D.dset'.format(prefix, hemi)
        if out_1D and path.exists(fo_1D):
            os.remove(fo_1D)
        out_1D_cmd = ['-out_1D', fo_1D] if out_1D else []
        pc.check_call(['3dVol2Surf',
            '-spec', spec[hemi],
            '-surf_A', 'smoothwm',
            '-surf_B', 'pial',
            '-sv', args.surf_vol,
            '-grid_parent', args.input,
            *mask_cmd,
            '-map_func', args.map_func,
            '-f_steps', '20',
            '-f_index', 'nodes',
            '-out_niml', fo_niml, 
            *out_1D_cmd])
    pc.wait() # Wait for all 3dVol2Surf instances
